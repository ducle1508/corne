/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        lt_150: lt_150 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_150";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        mt_400: mt_400 {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_400";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt_400 LEFT_CONTROL ESCAPE  &mt_400 LEFT_ALT Q  &kp W  &kp E    &kp R           &kp T                 &kp Y            &kp U          &kp I          &kp O    &mt_400 LEFT_ALT P  &mt_400 LEFT_CONTROL MINUS
&kp TAB                      &kp A               &kp S  &kp D    &kp F           &kp G                 &kp H            &kp J          &kp K          &kp L    &kp SQT             &kp ENTER
&mt LEFT_SHIFT BACKSPACE     &kp Z               &kp X  &kp C    &kp V           &kp B                 &kp N            &kp M          &kp COMMA      &kp DOT  &kp SLASH           &mt LEFT_SHIFT SEMI
                                                        &kp F12  &lt_150 2 HOME  &mt LEFT_GUI SPACE    &lt 1 BACKSPACE  &lt_150 2 END  &kp BACKSLASH
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&mt_400 LEFT_CONTROL GRAVE  &mt_400 LEFT_ALT Q  &kp W  &kp E  &kp R      &kp T                 &kp F12        &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &kp RIGHT_ALT  &kp RIGHT_CONTROL
&kp TAB                     &kp A               &kp S  &kp D  &kp F      &kp LG(G)             &kp LS(ENTER)  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(ENTER)  &kp ENTER
&mt LEFT_SHIFT BACKSPACE    &kp Z               &kp X  &kp C  &kp LG(V)  &kp LG(B)             &none          &kp PAGE_UP      &kp SPACE       &kp PAGE_DOWN    &none          &kp RIGHT_SHIFT
                                                       &none  &kp HOME   &mt LEFT_GUI SPACE    &none          &kp END          &none
            >;
        };

        num_char_med {
            bindings = <
&none          &none             &kp LEFT_PARENTHESIS  &none              &kp RIGHT_PARENTHESIS  &none                 &none          &kp LEFT_BRACKET  &kp EQUAL  &kp RIGHT_BRACKET  &kp RIGHT_ALT  &kp RIGHT_CONTROL
&kp BACKSPACE  &kp N1            &kp N2                &kp N3             &kp N4                 &kp N5                &kp N6         &kp N7            &kp N8     &kp N9             &kp N0         &kp ENTER
&none          &kp C_PLAY_PAUSE  &kp C_PREVIOUS        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP        &none                 &none          &none             &none      &none              &none          &kp RIGHT_SHIFT
                                                       &mo 4              &mo 3                  &mt LEFT_GUI SPACE    &kp BACKSPACE  &mo 3             &none
            >;
        };

        num_char_med_upper {
            bindings = <
&none          &none            &none        &none      &none       &none          &none      &none          &kp PLUS      &none           &kp RIGHT_ALT    &kp RIGHT_CONTROL
&kp BACKSPACE  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp ENTER
&none          &none            &none        &none      &none       &none          &none      &none          &none         &none           &kp RIGHT_GUI    &kp RIGHT_SHIFT
                                             &none      &none       &none          &none      &none          &none
            >;
        };

        bt_fn {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &none  &none  &none  &none  &kp RIGHT_ALT  &kp RIGHT_CONTROL
&kp F7      &kp F8        &kp F9        &kp F10       &kp F11       &kp F12         &none  &none  &none  &none  &none          &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &kp RIGHT_GUI  &kp RIGHT_SHIFT
                                        &none         &none         &none           &none  &none  &none
            >;
        };

        BASE_UPPER {
            bindings = <
&kp SPACE      &kp LS(Q)  &kp LS(W)  &kp LS(E)  &kp LS(R)     &kp LS(T)    &kp LS(Y)  &kp LS(U)    &kp LS(I)      &kp LS(O)    &mt_400 LS(LEFT_ALT) LS(P)      &mt_400 LS(LEFT_CONTROL) LS(MINUS)
&kp LS(TAB)    &kp LS(A)  &kp LS(S)  &kp LS(D)  &kp LS(F)     &kp LS(G)    &kp LS(H)  &kp LS(J)    &kp LS(L)      &kp LS(K)    &kp LS(SINGLE_QUOTE)            &kp LS(ENTER)
&kp BACKSPACE  &kp LS(Z)  &kp LS(X)  &kp LS(C)  &kp LS(V)     &kp LS(B)    &kp LS(M)  &kp LS(N)    &kp LS(COMMA)  &kp LS(DOT)  &mt_400 LS(LEFT_GUI) LS(SLASH)  &kp LS(SEMI)
                                     &none      &kp LS(HOME)  &none        &none      &kp LS(END)  &none
            >;
        };
    };
};
